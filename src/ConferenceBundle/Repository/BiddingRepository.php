<?php

namespace ConferenceBundle\Repository;

/**
 * BiddingRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
use ConferenceBundle\Entity\Bidding;
use ConferenceBundle\Entity\Proposal;
use ConferenceBundle\Entity\User;

class BiddingRepository extends \Doctrine\ORM\EntityRepository
{
    public function persist($bidding)
    {
        $entityManager = $this->getEntityManager();
        $entityManager->persist($bidding);
        $entityManager->flush();
        return true;
    }
    public function getProposalByUserIdWhoVotedYes($proposalId)
    {
        $entityManager = $this->getEntityManager();
        $qb = $entityManager->createQueryBuilder();
       $qb ->select('g')
        ->from(User::class, 'g')
        ->innerJoin('g.bidding', 'gm')
        ->innerJoin('gm.proposal', 'u')
        ->where('u.id = :user')
        ->setParameter('user', $proposalId)
       ->andWhere('gm.vote = 2');
        return $qb->getQuery()->getResult();
    }
    public function getProposalByUserIdWhoVotedMaybe($proposalId)
    {
        $entityManager = $this->getEntityManager();
        $qb = $entityManager->createQueryBuilder();
       $qb ->select('g')
        ->from(User::class, 'g')
        ->innerJoin('g.bidding', 'gm')
        ->innerJoin('gm.proposal', 'u')
        ->where('u.id = :user')
        ->setParameter('user', $proposalId)
       ->andWhere('gm.vote = 1');
        return $qb->getQuery()->getResult();
    }
}
